#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).


# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /🔋/;s/[Nn]ot charging, /🛑/;s/[Cc]harging, /🔌/;s/[Uu]nknown, /♻️/;s/[Ff]ull, /⚡/;s/ \(remaining\|until charged\)//"; exit

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status.
	capacity=$(cat "$battery"/capacity 2>/dev/null) || break
	status=$(sed "s/[Dd]ischarging/DC/;s/[Nn]ot charging/🛑/;s/[Cc]harging/C/;s/[Uu]nknown/♻️/;s/[Ff]ull//" "$battery"/status)

	if [ $status = "DC" ]; then
		case 1 in
			$(( $capacity <= 10 ))) status="" ;;
			$(( $capacity <= 20 ))) status="" ;;
			$(( $capacity <= 30 ))) status="" ;;
			$(( $capacity <= 40 ))) status="" ;;
			$(( $capacity <= 50 ))) status="" ;;
			$(( $capacity <= 60 ))) status="" ;;
			$(( $capacity <= 70 ))) status="" ;;
			$(( $capacity <= 80 ))) status="" ;;
			$(( $capacity <= 90 ))) status="" ;;
			 				     *) status="" ;;
		 esac
	elif [ $status = "C" ]; then
		case 1 in
			$(( $capacity <= 10 ))) status="" ;;
			$(( $capacity <= 20 ))) status="" ;;
			$(( $capacity <= 30 ))) status="" ;;
			$(( $capacity <= 40 ))) status="" ;;
			$(( $capacity <= 50 ))) status="" ;;
			$(( $capacity <= 60 ))) status="" ;;
			$(( $capacity <= 70 ))) status="" ;;
			$(( $capacity <= 80 ))) status="" ;;
			$(( $capacity <= 90 ))) status="" ;;
								 *)	status="" ;;
		 esac
	fi

	printf "%s%s%s%% " "$status " "$warn" "$capacity"
	unset warn

	if [ "$capacity" -lt 31 ]; then
		[ ! -f /tmp/batstat ] && touch /tmp/batstat && dunstify -r 5 -a top-center -u critical " BATTERY CRITICAL"
		[ -z "$(find "/tmp/batstat" -mmin -5)" ] && dunstify -r 5 -a top-center -u critical " BATTERY CRITICAL"
	fi
done | sed 's/ *$//'
